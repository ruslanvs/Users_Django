>>> users.objects.count()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'users' is not defined
>>> Users.objects.count()
0
>>> Users.objects.first()
>>> Users.objects.all()
<QuerySet []>
>>> Users.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Users' has no attribute 'all'
>>> Users.objects.create( first_name = "Jedy")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/query.py", line 399, in create
    obj.save(force_insert=True, using=self.db)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/base.py", line 796, in save
    force_update=force_update, update_fields=update_fields)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/base.py", line 824, in save_base
    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/base.py", line 908, in _save_table
    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/base.py", line 947, in _do_insert
    using=using, raw=raw)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/query.py", line 1043, in _insert
    return query.get_compiler(using=using).execute_sql(return_id)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/sql/compiler.py", line 1054, in execute_sql
    cursor.execute(sql, params)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/backends/utils.py", line 79, in execute
    return super(CursorDebugWrapper, self).execute(sql, params)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/backends/utils.py", line 64, in execute
    return self.cursor.execute(sql, params)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/utils.py", line 94, in __exit__
    six.reraise(dj_exc_type, dj_exc_value, traceback)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/backends/utils.py", line 64, in execute
    return self.cursor.execute(sql, params)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py", line 337, in execute
    return Database.Cursor.execute(self, query, params)
IntegrityError: NOT NULL constraint failed: users_users.age
>>> Users.objects.create( first_name = "Jedy", last_name = "Aha", email = "asdf@asdf.asdf, age = 345 )
  File "<console>", line 1
    Users.objects.create( first_name = "Jedy", last_name = "Aha", email = "asdf@asdf.asdf, age = 345 )
                                                                                                     ^
SyntaxError: EOL while scanning string literal
>>> Users.objects.create( first_name = "Jedy", last_name = "Aha", email = "asdf@asdf.asdf", age = 345 )
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/query.py", line 397, in create
    obj = self.model(**kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/base.py", line 555, in __init__
    raise TypeError("'%s' is an invalid keyword argument for this function" % list(kwargs)[0])
TypeError: 'email' is an invalid keyword argument for this function
>>> Users.objects.create( first_name = "Jedy", last_name = "Aha", email_address = "asdf@asdf.asdf", age = 345 )
<Users: Users object>
>>> Users.objects.all()
<QuerySet [<Users: Users object>]>
>>> Users.objects.create( first_name = "Satoshy", last_name = "Nakamoto", email_address = "SaMo@asdf.asdf", age = 35 )
<Users: Users object>
>>> Users.objects.all()
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.objects.last()
<Users: Users object>
>>> Users.objects.last().first_name
u'Satoshy'
>>> Users.objects.last().email_address
u'SaMo@asdf.asdf'
>>> Users.objects.order_by("first_name")
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.objects.order_by("first_name").first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'first_name'
>>> Users.objects.all().order_by("first_name").first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'first_name'
>>> Userts.objects.all().first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Userts' is not defined
>>> Users.objects.all().first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'first_name'
>>> Users.objects.first_name.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Manager' object has no attribute 'first_name'
>>> Users.objects.first().first_name
u'Jedy'
>>> Users.objects.all()
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.objects.only('first_name')
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.objects.only('first_name').first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'first_name'
>>> Users.objects.order_by("first_name")
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.first_name.objects.order_by("first_name")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'DeferredAttribute' object has no attribute 'objects'
>>> Users.objects.order_by("first_name")
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.objects.order_by("-first_name")
<QuerySet [<Users: Users object>, <Users: Users object>]>
>>> Users.objects.values_list('first_name')
<QuerySet [(u'Jedy',), (u'Satoshy',)]>
>>> Users.objects.values_list('first_name').order_by('first_name')
<QuerySet [(u'Jedy',), (u'Satoshy',)]>
>>> Users.objects.values_list('first_name').order_by(-'first_name')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: bad operand type for unary -: 'str'
>>> Users.objects.values_list('first_name').order_by('-first_name')
<QuerySet [(u'Satoshy',), (u'Jedy',)]>
>>> Users.objects.create( first_name = "Don", last_name = "Diridon", email_address="asdf@ewerw.df
  File "<console>", line 1
    Users.objects.create( first_name = "Don", last_name = "Diridon", email_address="asdf@ewerw.df
                                                                                                ^
SyntaxError: EOL while scanning string literal
>>> Users.objects.create( first_name = "Don", last_name = "Diridon", email_address="asdf@ewerw.df", age=33
... )
<Users: Users object>
>>> Users.objects.all()
<QuerySet [<Users: Users object>, <Users: Users object>, <Users: Users object>]>
>>> Users.objects.values_list('first_name').order_by('-first_name')
<QuerySet [(u'Satoshy',), (u'Jedy',), (u'Don',)]>
>>> Users.objects.values_list('first_name').order_by('first_name')
<QuerySet [(u'Don',), (u'Jedy',), (u'Satoshy',)]>
>>> Users.objects.all(id=3)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
TypeError: all() got an unexpected keyword argument 'id'
>>> Users.objects.get(id=3)
<Users: Users object>
>>> Users.objects.get(id=3).first_name
u'Don'
>>> Users.objects.create(first_name="Albert", last_name="Dien", email_address='albert@df.cdd', age=64)
<Users: Users object>
>>> Users.objects.values_list('first_name')
<QuerySet [(u'Jedy',), (u'Satoshy',), (u'Don',), (u'Albert',)]>
>>> Users.objects.values_list('first_name').order_by('first_name')
<QuerySet [(u'Albert',), (u'Don',), (u'Jedy',), (u'Satoshy',)]>
>>> n = Users.objects.get(id=3).first_name
>>> n.name = "Thomas"
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'unicode' object has no attribute 'name'
>>> n.first_name = "Thomas"
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'unicode' object has no attribute 'first_name'
>>> print n
Don
>>> n = "Thomas"
>>> n.save()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'str' object has no attribute 'save'
>>> print n
Thomas
>>> print Users.objects.get(id=3)
Users object
>>> print Users.objects.get(id=3).first_name
Don
>>> n.save()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'str' object has no attribute 'save'
>>> print n
Thomas
>>> n = Users.objects.get(id=3)
>>> n.first_name = "Thomas"
>>> n.save
<bound method Users.save of <Users: Users object>>
>>> n.save()
>>> print Users.objects.get(id).first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/query.py", line 376, in get
    clone = self.filter(*args, **kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/query.py", line 794, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/query.py", line 812, in _filter_or_exclude
    clone.query.add_q(Q(*args, **kwargs))
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/sql/query.py", line 1227, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/sql/query.py", line 1253, in _add_q
    allow_joins=allow_joins, split_subq=split_subq,
  File "/Users/ruslansuvorov/Dojo/python_stack/myEnvironments/djangoEnv/lib/python2.7/site-packages/django/db/models/sql/query.py", line 1130, in build_filter
    arg, value = filter_expr
TypeError: 'builtin_function_or_method' object is not iterable
>>> print Users.objects.get(id=3).first_name
Thomas
>>> Users.objects.get(id=3).delete
<bound method Users.delete of <Users: Users object>>
>>> Users.objects.all()
<QuerySet [<Users: Users object>, <Users: Users object>, <Users: Users object>, <Users: Users object>]>
>>> Users.objects.get(id=3).delete()
(1, {u'users.Users': 1})
>>> Users.objects.all()
<QuerySet [<Users: Users object>, <Users: Users object>, <Users: Users object>]>
>>> Users.objects.values_list('first_name')
<QuerySet [(u'Jedy',), (u'Satoshy',), (u'Albert',)]>